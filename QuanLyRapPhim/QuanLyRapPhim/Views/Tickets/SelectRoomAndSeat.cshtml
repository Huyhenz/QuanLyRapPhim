@model QuanLyRapPhim.Models.Showtime

@{
    ViewData["Title"] = "Chọn ghế";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container my-5">
    <!-- Thông tin phim và lịch chiếu -->
    <div class="row mb-4">
        <div class="col-md-8">
            <h1 class="text-white mb-2 title-gradient">Chọn ghế xem phim</h1>
            <h4 class="text-muted mb-3">Phim: @Model.Movie.Title</h4>
            <div class="d-flex flex-wrap text-light">
                <p class="me-4">
                    <i class="fas fa-door-open text-primary me-2"></i>
                    <strong>Phòng:</strong> @Model.Room.RoomName
                </p>
                <p class="me-4">
                    <i class="fas fa-calendar-alt text-primary me-2"></i>
                    <strong>Ngày chiếu:</strong> @Model.Date.ToString("dd/MM/yyyy")
                </p>
                <p>
                    <i class="fas fa-clock text-primary me-2"></i>
                    <strong>Giờ chiếu:</strong> @Model.StartTime
                </p>
            </div>
        </div>
        <div class="col-md-4 text-end">
            <a asp-controller="Showtimes" asp-action="Index" asp-route-movieId="@Model.MovieId" class="btn btn-secondary glow-effect">
                <i class="fas fa-arrow-left me-1"></i> Quay lại chọn lịch chiếu
            </a>
        </div>
    </div>

    <!-- Thông báo lỗi hoặc thành công -->
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger glow-effect" role="alert">
            @TempData["ErrorMessage"]
        </div>
    }
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success glow-effect" role="alert">
            @TempData["SuccessMessage"]
        </div>
    }

    <!-- Form chọn ghế -->
    <form asp-action="ConfirmBooking" method="post">
        <input type="hidden" name="showtimeId" value="@Model.ShowtimeId" />

        <!-- Màn hình chiếu -->
        <div class="screen-container text-center mb-4">
            <div class="screen title-gradient glow-effect">
                <span class="screen-label">Màn hình chiếu</span>
            </div>
        </div>

        <!-- Sơ đồ ghế -->
        <div class="seating-chart mb-4">
            <div class="blur-background"></div>
            @{
                var seats = Model.Room.Seats.OrderBy(s => s.SeatNumber).ToList();
                int seatsPerRow = Model.Room.RoomName switch
                {
                    "Room 1" => 8,
                    "Room 2" => 12,
                    "Room 3" => 10,
                    _ => 10
                };
                int totalSeats = seats.Count;
                int totalRows = (int)Math.Ceiling((double)totalSeats / seatsPerRow);
                char lastRowLabel = (char)('A' + totalRows - 1);

                for (int row = 0; row < totalRows; row++)
                {
                    var rowSeats = seats.Skip(row * seatsPerRow).Take(seatsPerRow).ToList();
                    char rowLabel = (char)('A' + row);
                    bool isLastRow = (rowLabel == lastRowLabel);
                    <div class="seat-row d-flex align-items-center mb-3">
                        <span class="row-label text-light me-3 glow-effect">Hàng @rowLabel</span>
                        <div class="d-flex justify-content-center flex-grow-1 seat-container">
                            @for (int i = 0; i < rowSeats.Count; i++)
                            {
                                var seat = rowSeats[i];
                                if (isLastRow && int.TryParse(seat.SeatNumber, out int seatNumber) && seatNumber % 2 == 0 && i + 1 < rowSeats.Count)
                                {
                                    var nextSeat = rowSeats[i + 1];
                                    if (int.TryParse(nextSeat.SeatNumber, out int nextSeatNumber) && nextSeatNumber % 2 == 1)
                                    {
                                        <div class="seat seat-couple mx-2 glow-effect">
                                            <input type="checkbox" name="selectedSeats" value="@seat.SeatId" id="seat-@seat.SeatId" @(seat.Status == "Đã đặt" ? "disabled" : "") />
                                            <label for="seat-@seat.SeatId" class="seat-label">
                                                <i class="fas fa-chair"></i>
                                                <span class="seat-number">@seat.SeatNumber</span>
                                            </label>
                                            <input type="checkbox" name="selectedSeats" value="@nextSeat.SeatId" id="seat-@nextSeat.SeatId" @(nextSeat.Status == "Đã đặt" ? "disabled" : "") />
                                            <label for="seat-@nextSeat.SeatId" class="seat-label">
                                                <i class="fas fa-chair"></i>
                                                <span class="seat-number">@nextSeat.SeatNumber</span>
                                            </label>
                                            <div class="cup-holder"></div>
                                            <div class="seat-divider"></div>
                                        </div>
                                        i++;
                                    }
                                    else
                                    {
                                        <div class="seat @(seat.Status == "Đã đặt" ? "seat-taken" : "seat-available") mx-2 glow-effect">
                                            <input type="checkbox" name="selectedSeats" value="@seat.SeatId" id="seat-@seat.SeatId" @(seat.Status == "Đã đặt" ? "disabled" : "") />
                                            <label for="seat-@seat.SeatId" class="seat-label">
                                                <i class="fas fa-chair"></i>
                                                <span class="seat-number">@seat.SeatNumber</span>
                                            </label>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <div class="seat @(seat.Status == "Đã đặt" ? "seat-taken" : "seat-available") mx-2 glow-effect">
                                        <input type="checkbox" name="selectedSeats" value="@seat.SeatId" id="seat-@seat.SeatId" @(seat.Status == "Đã đặt" ? "disabled" : "") />
                                        <label for="seat-@seat.SeatId" class="seat-label">
                                            <i class="fas fa-chair"></i>
                                            <span class="seat-number">@seat.SeatNumber</span>
                                        </label>
                                    </div>
                                }
                            }
                            @if (rowSeats.Count < seatsPerRow)
                            {
                                @for (int i = 0; i < seatsPerRow - rowSeats.Count; i++)
                                {
                                    <div class="seat seat-placeholder mx-2"></div>
                                }
                            }
                        </div>
                    </div>
                }

                // Thêm hàng ghế đôi màu vàng
                char yellowRowLabel = (char)(lastRowLabel + 1);
                int yellowCoupleSeats = seatsPerRow / 2; // Số cặp ghế đôi
                int yellowSeatStart = totalSeats + 1;
                <div class="seat-row d-flex align-items-center mb-3">
                    <span class="row-label text-light me-3 glow-effect">Hàng @yellowRowLabel</span>
                    <div class="d-flex justify-content-center flex-grow-1 seat-container">
                        @for (int i = 0; i < yellowCoupleSeats; i++)
                        {
                            int firstSeatNumber = yellowSeatStart + (i * 2);
                            int secondSeatNumber = firstSeatNumber + 1;
                            string firstSeatId = $"yellow-{firstSeatNumber}";
                            string secondSeatId = $"yellow-{secondSeatNumber}";
                            <div class="seat seat-couple-yellow mx-2 glow-effect">
                                <input type="checkbox" name="selectedSeats" value="@firstSeatId" id="seat-@firstSeatId" />
                                <label for="seat-@firstSeatId" class="seat-label">
                                    <i class="fas fa-chair"></i>
                                    <span class="seat-number">@firstSeatNumber</span>
                                </label>
                                <input type="checkbox" name="selectedSeats" value="@secondSeatId" id="seat-@secondSeatId" />
                                <label for="seat-@secondSeatId" class="seat-label">
                                    <i class="fas fa-chair"></i>
                                    <span class="seat-number">@secondSeatNumber</span>
                                </label>
                                <div class="cup-holder"></div>
                                <div class="seat-divider"></div>
                            </div>
                        }
                        @if (yellowCoupleSeats * 2 < seatsPerRow)
                        {
                            @for (int i = 0; i < seatsPerRow - (yellowCoupleSeats * 2); i++)
                            {
                                <div class="seat seat-placeholder mx-2"></div>
                            }
                        }
                    </div>
                </div>
            }
        </div>

        <!-- Chú thích trạng thái ghế -->
        <div class="seat-legend text-center mb-4">
            <p class="text-light">
                <span class="badge bg-success me-2 glow-effect"><i class="fas fa-chair me-1"></i> Ghế trống</span>
                <span class="badge bg-danger me-2 glow-effect"><i class="fas fa-chair me-1"></i> Ghế đã đặt</span>
                <span class="badge bg-primary me-2 glow-effect"><i class="fas fa-chair me-1"></i> Ghế đang chọn</span>
                
                <span class="badge bg-yellow text-dark me-2 glow-effect"><i class="fas fa-chair me-1"></i> Ghế đôi (Vàng)</span>
            </p>
        </div>

        <!-- Danh sách ghế đã chọn và tổng tiền -->
        <div class="selected-seats-info text-light mb-4 glow-effect">
            <h5>Ghế đã chọn: <span id="selected-seats-list"></span></h5>
            <h5>Tổng tiền: <span id="total-price">0</span> VNĐ</h5>
        </div>

        <!-- Nút xác nhận -->
        <div class="text-center">
            <button type="submit" class="btn btn-primary btn-lg glow-effect title-gradient">
                <i class="fas fa-ticket-alt me-1"></i> Xác nhận đặt vé
            </button>
        </div>
    </form>
</div>

<!-- CSS tùy chỉnh -->
<style>
    body {
        background-color: #0F0F0F;
        color: #ffffff;
        font-family: 'Montserrat', sans-serif;
    }

    .title-gradient {
        background: linear-gradient(90deg, #ff0033, #1c1c1c);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        color: transparent;
    }

        .title-gradient:not(h1) {
            -webkit-text-fill-color: inherit;
            background-clip: inherit;
            color: #fff;
        }

    .glow-effect {
        box-shadow: 0 0 15px rgba(255, 0, 51, 0.3);
        transition: box-shadow 0.3s ease, transform 0.3s ease;
    }

        .glow-effect:hover {
            box-shadow: 0 0 25px rgba(255, 0, 51, 0.5);
            transform: scale(1.05);
        }

    .screen-container {
        margin: 0 auto;
        max-width: 800px;
        position: relative;
    }

    .screen {
        background: linear-gradient(90deg, #333, #555, #333);
        height: 40px;
        border-radius: 15px;
        position: relative;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);
        z-index: 2;
    }

    .screen-label {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        color: #fff;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 2px;
    }

    .seating-chart {
        max-width: 100%;
        margin: 0 auto;
        padding: 20px;
        background-color: #1c1c1c;
        border-radius: 15px;
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
        position: relative;
        overflow-x: auto;
    }

    .blur-background {
        position: absolute;
        top: 0;
        left: 50%;
        transform: translateX(-50%);
        width: 80%;
        height: 100%;
        background: radial-gradient(circle at top, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0) 70%);
        filter: blur(20px);
        z-index: 1;
    }

    .seat-row {
        display: flex;
        align-items: center;
        position: relative;
        z-index: 2;
        min-width: fit-content;
    }

    .row-label {
        width: 50px;
        font-weight: 600;
        line-height: 40px;
        color: #b3b3b3;
        background: #2a2a2a;
        border-radius: 5px;
        text-align: center;
        flex-shrink: 0;
    }

    .seat-container {
        display: flex;
        justify-content: flex-start;
        gap: 10px;
        flex-wrap: nowrap;
        min-width: 0;
    }

    .seat {
        width: 50px;
        height: 50px;
        display: flex;
        align-items: center;
        justify-content: center;
        position: relative;
        transition: transform 0.2s ease, box-shadow 0.3s ease;
    }

    .seat-available .seat-label i {
        color: #00cc00;
        cursor: pointer;
    }

    .seat-taken .seat-label i {
        color: #e6002e;
        cursor: not-allowed;
    }

    .seat-couple {
        width: 120px;
        height: 50px;
        display: flex;
        align-items: center;
        justify-content: space-between;
        position: relative;
        background-color: #ff3333;
        border-radius: 5px;
        overflow: hidden;
    }

    .seat-couple-yellow {
        width: 120px;
        height: 50px;
        display: flex;
        align-items: center;
        justify-content: space-between;
        position: relative;
        background-color: #ffcc00;
        border-radius: 5px;
        overflow: hidden;
    }

        .seat-couple .seat-label,
        .seat-couple-yellow .seat-label {
            width: 50%;
            height: 100%;
            display: flex;
            align-items: center;
            justify-content: center;
            position: relative;
        }

    .seat-couple .seat-label {
        background-color: #ff3333;
    }

    .seat-couple-yellow .seat-label {
        background-color: #ffcc00;
    }

        .seat-couple .seat-label i,
        .seat-couple-yellow .seat-label i {
            color: #ffffff;
            font-size: 1.5rem;
        }

    .seat-couple .seat-number,
    .seat-couple-yellow .seat-number {
        position: absolute;
        font-size: 0.7rem;
        font-weight: 600;
        color: #fff;
        top: 50%;
        transform: translateY(-50%);
        background: rgba(0, 0, 0, 0.5);
        border-radius: 50%;
        padding: 2px 5px;
    }

    .seat-couple input:checked + .seat-label i,
    .seat-couple-yellow input:checked + .seat-label i {
        color: #00bfff;
        transform: scale(1.1);
        box-shadow: 0 0 10px rgba(0, 191, 255, 0.5);
    }

    .seat-couple .cup-holder,
    .seat-couple-yellow .cup-holder {
        width: 20px;
        height: 30px;
        background-color: #ccc;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        border-radius: 5px;
        z-index: 1;
    }

    .seat-couple .seat-divider,
    .seat-couple-yellow .seat-divider {
        width: 2px;
        height: 100%;
        background-color: #000;
        position: absolute;
        left: 50%;
        transform: translateX(-50%);
        z-index: 2;
    }

    .seat-placeholder {
        width: 50px;
        height: 50px;
        margin: 5px;
        visibility: hidden;
    }

    .seat input {
        display: none;
    }

    .seat-label {
        display: flex;
        align-items: center;
        justify-content: center;
        position: relative;
        width: 100%;
        height: 100%;
        transition: transform 0.2s ease;
    }

        .seat-label i {
            font-size: 1.5rem;
            transition: color 0.3s ease;
        }

    .seat input:checked + .seat-label i {
        color: #00bfff;
        transform: scale(1.1);
        box-shadow: 0 0 10px rgba(0, 191, 255, 0.5);
    }

    .seat input:disabled + .seat-label i {
        opacity: 0.5;
    }

    .seat:hover:not(.seat-taken) .seat-label i {
        transform: scale(1.1);
        box-shadow: 0 0 10px rgba(255, 255, 255, 0.3);
    }

    .seat-legend .badge {
        font-size: 1rem;
        padding: 8px 12px;
        border-radius: 20px;
        box-shadow: 0 0 10px rgba(255, 255, 255, 0.2);
    }

    .bg-yellow {
        background-color: #ffcc00;
    }

    .selected-seats-info {
        max-width: 600px;
        margin: 0 auto;
        padding: 20px;
        background-color: #1c1c1c;
        border-radius: 15px;
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
        border: 1px solid #ff0033;
    }

        .selected-seats-info h5 {
            margin: 0;
            font-size: 1.1rem;
            color: #b3b3b3;
        }

    .btn-primary {
        background-color: #ff0033;
        border: none;
        border-radius: 20px;
        padding: 10px 30px;
        font-weight: 600;
        font-size: 1.2rem;
        transition: background-color 0.3s ease, transform 0.3s ease;
    }

        .btn-primary:hover {
            background-color: #e6002e;
            transform: scale(1.05);
        }

    .btn-secondary {
        border-color: #ff0033;
        color: #ff0033;
        border-radius: 20px;
        padding: 8px 20px;
        font-weight: 600;
        font-size: 1rem;
        transition: background-color 0.3s ease, transform 0.3s ease;
    }

        .btn-secondary:hover {
            background-color: #ff0033;
            color: #ffffff;
            border-color: #ff0033;
            transform: scale(1.05);
        }

    .text-muted {
        color: #b3b3b3 !important;
    }

    .alert-danger {
        background-color: #333;
        color: #fff;
        border: 1px solid #e6002e;
        border-radius: 10px;
    }

    .alert-success {
        background-color: #333;
        color: #fff;
        border: 1px solid #444;
        border-radius: 10px;
    }
</style>

<!-- Thêm Font Awesome để sử dụng icon -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />

<!-- JavaScript để cập nhật danh sách ghế đã chọn và tổng tiền -->
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const seatCheckboxes = document.querySelectorAll('input[name="selectedSeats"]');
        const selectedSeatsList = document.getElementById('selected-seats-list');
        const totalPriceElement = document.getElementById('total-price');
        const normalPrice = 50000;
        const couplePrice = 100000;
        const yellowCouplePrice = 120000;

        function updateSelectedSeats() {
            const selectedSeats = Array.from(seatCheckboxes)
                .filter(checkbox => checkbox.checked)
                .map(checkbox => {
                    const label = checkbox.nextElementSibling;
                    const numberSpan = label.querySelector('.seat-number');
                    const isCouple = checkbox.closest('.seat').classList.contains('seat-couple');
                    const isYellowCouple = checkbox.closest('.seat').classList.contains('seat-couple-yellow');
                    return { number: numberSpan.textContent, isCouple, isYellowCouple };
                });

            selectedSeatsList.textContent = selectedSeats.length > 0
                ? selectedSeats.map(s => s.number).join(', ')
                : 'Chưa chọn ghế';

            const totalPrice = selectedSeats.reduce((total, seat) => {
                if (seat.isYellowCouple) {
                    return total + yellowCouplePrice;
                } else if (seat.isCouple) {
                    return total + couplePrice;
                } else {
                    return total + normalPrice;
                }
            }, 0);

            totalPriceElement.textContent = totalPrice.toLocaleString();
        }

        seatCheckboxes.forEach(checkbox => {
            checkbox.addEventListener('change', updateSelectedSeats);
        });

        updateSelectedSeats();
    });
</script>