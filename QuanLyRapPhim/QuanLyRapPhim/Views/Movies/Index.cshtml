@using System.Linq

@model IEnumerable<QuanLyRapPhim.Models.Movie>

@{
    ViewData["Title"] = "Danh sách phim";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var random = new Random(); // For random review counts
    bool isAdmin = User.IsInRole("Admin"); // Check if user is admin for CSS class
}

<!-- Main Container -->
<div class="container-fluid d-flex position-relative">

    <!-- Admin Sidebar (Visible only to Admins) -->
    @if (isAdmin)
    {
        <aside class="sidebar">
            <div class="sidebar-header">
                <h3 class="sidebar-title">CinemaX Admin</h3>
            </div>
            <nav class="sidebar-nav">
                <a href="/Movies" class="nav-item @(ViewContext.RouteData.Values["Controller"]?.ToString() == "Movies" ? "active" : "")"><i class="fas fa-film"></i> Quản lý phim</a>
                <a href="/Showtimes" class="nav-item @(ViewContext.RouteData.Values["Controller"]?.ToString() == "Showtimes" ? "active" : "")"><i class="fas fa-clock"></i> Quản lý lịch chiếu</a>
                <a href="/Rooms" class="nav-item @(ViewContext.RouteData.Values["Controller"]?.ToString() == "Rooms" ? "active" : "")"><i class="fas fa-door-open"></i> Quản lý phòng</a>
                <a href="/Seats" class="nav-item @(ViewContext.RouteData.Values["Controller"]?.ToString() == "Seats" ? "active" : "")"><i class="fas fa-chair"></i> Quản lý ghế</a>
                <a href="/Admin/ManageBookings" class="nav-item @(ViewContext.RouteData.Values["Controller"]?.ToString() == "Admin" && ViewContext.RouteData.Values["Action"]?.ToString() == "ManageBookings" ? "active" : "")"><i class="fas fa-ticket-alt"></i> Quản lý đặt vé</a>
                <a href="/Admin/RevenueStatistics" class="nav-item @(ViewContext.RouteData.Values["Controller"]?.ToString() == "Admin" && ViewContext.RouteData.Values["Action"]?.ToString() == "RevenueStatistics" ? "active" : "")"><i class="fas fa-chart-bar"></i> Báo cáo thống kê</a>
                <div class="nav-divider"></div>
                <a href="#" class="nav-item"><i class="fab fa-facebook"></i> Facebook</a>
                <a href="#" class="nav-item"><i class="fab fa-twitter"></i> Twitter</a>
                <a href="#" class="nav-item"><i class="fab fa-google"></i> Google</a>
            </nav>
        </aside>
    }

    <!-- Frame Wrapper -->
    <div class="frame-wrapper flex-grow-1 @(isAdmin ? "admin-view" : "user-view")">

        <!-- Header -->
        <div class="d-flex justify-content-between align-items-center mb-4">
            <div>
                <h1 class="title-gradient">Danh sách phim</h1>
                <div class="date-selection mb-2">
                    <label class="text-white me-2">Chọn ngày:</label>
                    <select id="dateSelect" class="form-select form-select-sm w-auto d-inline-block">
                        <option value="2025-05-26">Mon, May 26, 2025</option>
                        <option value="2025-05-27">Tue, May 27, 2025</option>
                        <option value="2025-05-28">Wed, May 28, 2025</option>
                        <option value="2025-05-29">Thu, May 29, 2025</option>
                        <option value="2025-05-30" selected>Fri, May 30, 2025</option>
                        <option value="2025-05-31">Sat, May 31, 2025</option>
                        <option value="2025-06-01">Sun, Jun 01, 2025</option>
                    </select>
                </div>
            </div>
            @if (isAdmin)
            {
                <div class="header-actions">
                    <button class="btn btn-create glow-effect" data-bs-toggle="modal" data-bs-target="#addMovieModal">Thêm phim mới</button>
                    <span class="order-count ms-3">@Model.Count() phim được tìm thấy</span>
                </div>
            }
        </div>

        <!-- Alerts for Admin Actions -->
        @if (isAdmin)
        {
            <div id="alert-container" class="mb-4"></div>
        }

        <!-- Admin Section -->
        @if (isAdmin)
        {
            <div class="admin-section">
                <h3 class="section-subtitle title-gradient">Danh sách phim (Quản lý)</h3>
                <div class="table-container">
                    <table class="table table-custom">
                        <thead>
                            <tr>
                                <th>Tên Phim</th>
                                <th>Poster</th>
                                <th>Thể loại</th>
                                <th>Thời lượng</th>
                                <th>Đạo diễn</th>
                                <th>Diễn viên</th>
                                <th>Mô tả</th>
                                <th>URL Trailer</th>
                                <th>Hành động</th>
                            </tr>
                        </thead>
                        <tbody id="movies-table">
                            @if (Model.Any())
                            {
                                foreach (var movie in Model)
                                {
                                    <tr data-id="@movie.MovieId">
                                        <td>@(movie.Title ?? "N/A")</td>
                                        <td>
                                            @if (!string.IsNullOrEmpty(movie.Poster))
                                            {
                                                <img src="@movie.Poster" alt="@movie.Title" style="width: 50px; height: auto; border-radius: 5px;" />
                                            }
                                            else
                                            {
                                                <span>N/A</span>
                                            }
                                        </td>
                                        <td>@(movie.Genre ?? "N/A")</td>
                                        <td>@(movie.Duration != 0 ? $"{movie.Duration} phút" : "N/A")</td>
                                        <td>@(movie.Director ?? "N/A")</td>
                                        <td>
                                            @if (string.IsNullOrEmpty(movie.Actors))
                                            {
                                                <span>N/A</span>
                                            }
                                            else if (movie.Actors.Length > 50)
                                            {
                                                @(movie.Actors.Substring(0, 50) + "...")
                                            }
                                            else
                                            {
                                                @movie.Actors
                                            }
                                        </td>
                                        <td>
                                            @if (string.IsNullOrEmpty(movie.Description))
                                            {
                                                <span>N/A</span>
                                            }
                                            else if (movie.Description.Length > 50)
                                            {
                                                @(movie.Description.Substring(0, 50) + "...")
                                            }
                                            else
                                            {
                                                @movie.Description
                                            }
                                        </td>
                                        <td>
                                            @if (string.IsNullOrEmpty(movie.TrailerUrl))
                                            {
                                                <span>N/A</span>
                                            }
                                            else
                                            {
                                                <a href="@movie.TrailerUrl" target="_blank" class="text-white">Xem Trailer</a>
                                            }
                                        </td>
                                        <td>
                                            <a asp-action="Details" asp-route-id="@movie.MovieId" class="btn btn-sm btn-create glow-effect action-btn">Chi tiết</a>
                                            <button class="btn btn-sm btn-warning glow-effect action-btn edit-movie-btn" data-id="@movie.MovieId">Sửa</button>
                                            <button class="btn btn-sm btn-danger glow-effect action-btn delete-movie-btn" data-id="@movie.MovieId">Xóa</button>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="9" class="text-center">Không có phim nào.</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="pagination">
                    <span>Hiển thị 01-@Model.Count() của @Model.Count()</span>
                    <div class="pagination-controls">
                        <button class="btn-pag glow-effect"><i class="fas fa-angle-left"></i></button>
                        <button class="btn-pag active glow-effect">1</button>
                        <button class="btn-pag glow-effect">2</button>
                        <button class="btn-pag glow-effect">3</button>
                        <button class="btn-pag glow-effect"><i class="fas fa-angle-right"></i></button>
                    </div>
                </div>
            </div>
        }

        <!-- User Section -->
        @if (!isAdmin)
        {
            <div class="movie-grid">
                @if (Model.Any())
                {
                    <div class="row">
                        @foreach (var item in Model)
                        {
                            double rating = item.Reviews?.Any() == true ? item.Reviews.Average(r => r.Rating) : 0;
                            int fullStars = (int)Math.Floor(rating);
                            bool hasHalfStar = rating % 1 >= 0.5;
                            int reviewCount = random.Next(0, 51);
                            <div class="col-md-6 col-lg-6 mb-4">
                                <div class="card movie-card d-flex flex-row align-items-stretch">
                                    <div class="poster-container">
                                        <img src="@item.Poster" class="card-img-left movie-poster" alt="@item.Title" />
                                    </div>
                                    <div class="card-body d-flex flex-column justify-content-between p-3">
                                        <div>
                                            <h5 class="card-title text-white mb-2">@item.Title</h5>
                                            <div class="star-rating mb-2">
                                                @for (int k = 1; k <= 5; k++)
                                                {
                                                    if (k <= fullStars)
                                                    {
                                                        <span class="fas fa-star text-warning"></span>
                                                    }
                                                    else if (k == fullStars + 1 && hasHalfStar)
                                                    {
                                                        <span class="fas fa-star-half-alt text-warning"></span>
                                                    }
                                                    else
                                                    {
                                                        <span class="fas fa-star text-secondary"></span>
                                                    }
                                                }
                                                <span class="rating-text text-white ms-2">(Đánh giá: @reviewCount)</span>
                                            </div>
                                            <p class="card-text text-white mb-1"><strong>Thời lượng:</strong> @(item.Duration != 0 ? $"{item.Duration} phút" : "N/A")</p>
                                            <p class="card-text text-white mb-1"><strong>Mô tả:</strong> @(string.IsNullOrEmpty(item.Description) ? "Chưa có mô tả" : item.Description.Length > 50 ? item.Description.Substring(0, 50) + "..." : item.Description)</p>
                                        </div>
                                        <div>
                                            <a href="@item.TrailerUrl" target="_blank" class="btn btn-danger btn-sm me-2">Xem Trailer</a>
                                            <a asp-action="Details" asp-route-id="@item.MovieId" class="btn btn-primary btn-sm">Chi tiết</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="row">
                        <div class="col-12 text-center">
                            <p class="text-white">Không có phim nào.</p>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</div>

<!-- Admin Modals -->
@if (isAdmin)
{
    <!-- Add Movie Modal -->
    <div class="modal fade" id="addMovieModal" tabindex="-1" aria-labelledby="addMovieModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title title-gradient" id="addMovieModalLabel">Thêm Phim Mới</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="add-movie-form">
                        <div class="mb-3">
                            <label for="addTitle" class="form-label">Tên Phim</label>
                            <input type="text" class="form-control glow-effect" id="addTitle" name="Title" required />
                        </div>
                        <div class="mb-3">
                            <label for="addDescription" class="form-label">Mô tả</label>
                            <textarea class="form-control glow-effect" id="addDescription" name="Description" rows="3"></textarea>
                        </div>
                        <div class="mb-3">
                            <label for="addDuration" class="form-label">Thời lượng (phút)</label>
                            <input type="number" class="form-control glow-effect" id="addDuration" name="Duration" required />
                        </div>
                        <div class="mb-3">
                            <label for="addPoster" class="form-label">URL Poster</label>
                            <input type="url" class="form-control glow-effect" id="addPoster" name="Poster" />
                        </div>
                        <div class="mb-3">
                            <label for="addGenre" class="form-label">Thể loại</label>
                            <input type="text" class="form-control glow-effect" id="addGenre" name="Genre" />
                        </div>
                        <div class="mb-3">
                            <label for="addDirector" class="form-label">Đạo diễn</label>
                            <input type="text" class="form-control glow-effect" id="addDirector" name="Director" />
                        </div>
                        <div class="mb-3">
                            <label for="addActors" class="form-label">Diễn viên</label>
                            <input type="text" class="form-control glow-effect" id="addActors" name="Actors" />
                        </div>
                        <div class="mb-3">
                            <label for="addTrailerUrl" class="form-label">URL Trailer (YouTube)</label>
                            <input type="url" class="form-control glow-effect" id="addTrailerUrl" name="TrailerUrl" placeholder="e.g., https://www.youtube.com/watch?v=VIDEO_ID" />
                        </div>
                        <button type="submit" class="btn btn-primary glow-effect">Thêm Phim</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Movie Modal -->
    <div class="modal fade" id="editMovieModal" tabindex="-1" aria-labelledby="editMovieModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title title-gradient" id="editMovieModalLabel">Sửa Phim</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="edit-movie-form">
                        <input type="hidden" id="editMovieId" name="MovieId" />
                        <div class="mb-3">
                            <label for="editTitle" class="form-label">Tên Phim</label>
                            <input type="text" class="form-control glow-effect" id="editTitle" name="Title" required />
                        </div>
                        <div class="mb-3">
                            <label for="editDescription" class="form-label">Mô tả</label>
                            <textarea class="form-control glow-effect" id="editDescription" name="Description" rows="3"></textarea>
                        </div>
                        <div class="mb-3">
                            <label for="editDuration" class="form-label">Thời lượng (phút)</label>
                            <input type="number" class="form-control glow-effect" id="editDuration" name="Duration" required />
                        </div>
                        <div class="mb-3">
                            <label for="editPoster" class="form-label">URL Poster</label>
                            <input type="url" class="form-control glow-effect" id="editPoster" name="Poster" />
                        </div>
                        <div class="mb-3">
                            <label for="editGenre" class="form-label">Thể loại</label>
                            <input type="text" class="form-control glow-effect" id="editGenre" name="Genre" />
                        </div>
                        <div class="mb-3">
                            <label for="editDirector" class="form-label">Đạo diễn</label>
                            <input type="text" class="form-control glow-effect" id="editDirector" name="Director" />
                        </div>
                        <div class="mb-3">
                            <label for="editActors" class="form-label">Diễn viên</label>
                            <input type="text" class="form-control glow-effect" id="editActors" name="Actors" />
                        </div>
                        <div class="mb-3">
                            <label for="editTrailerUrl" class="form-label">URL Trailer (YouTube)</label>
                            <input type="url" class="form-control glow-effect" id="editTrailerUrl" name="TrailerUrl" placeholder="e.g., https://www.youtube.com/watch?v=VIDEO_ID" />
                        </div>
                        <button type="submit" class="btn btn-primary glow-effect">Lưu Thay đổi</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

<!-- CSS Styles -->
<style>
    body {
        background-color: #1C2526; /* Màu nền Smoke Black */
        margin: 0;
        font-family: 'Roboto', sans-serif;
    }

    .container-fluid {
        display: flex;
        width: 100%;
        min-height: calc(100vh - 150px); /* Adjust for navbar and footer */
    }

    /* Sidebar */
    .sidebar {
        width: 250px;
        background-color: #0F1213; /* Màu Smoke Black đậm hơn */
        color: #FFDAB9; /* Màu đào nhạt */
        height: 100vh;
        position: fixed;
        top: 0;
        left: 0;
        padding-top: 20px;
        border-right: 1px solid #FFDAB9; /* Viền phải màu đào nhạt */
        overflow-y: auto;
        z-index: 999;
    }

    .sidebar-header {
        padding: 10px 20px;
        border-bottom: 1px solid #FFDAB9;
    }

    .sidebar-title {
        margin: 0;
        font-size: 1.5em;
        color: #FFDAB9;
    }

    .sidebar-nav {
        list-style: none;
        padding: 0;
        margin: 20px 0;
    }

    .nav-item {
        display: flex;
        align-items: center;
        padding: 10px 20px;
        color: #FFDAB9;
        text-decoration: none;
    }

        .nav-item i {
            margin-right: 10px;
            color: #FFDAB9;
        }

        .nav-item:hover {
            background-color: #FFDAB9;
            color: #0F1213;
        }

            .nav-item:hover i {
                color: #0F1213;
            }

        .nav-item.active {
            background-color: #FFDAB9;
            color: #0F1213;
        }

            .nav-item.active i {
                color: #0F1213;
            }

    .nav-divider {
        border-top: 1px solid #FFDAB9;
        margin: 10px 0;
    }

    /* Frame Wrapper */
    .frame-wrapper {
        display: flex;
        flex-direction: column;
        background: rgba(51, 51, 51, 0.7); /* Semi-transparent gray */
        border-radius: 20px;
        border: 4px solid #FFDAB9; /* Wider border */
        box-shadow: 0 0 15px rgba(255, 218, 185, 0.3);
        padding: 30px; /* Increased padding for wider spacing */
        width: 90%;
        margin-left: auto;
        margin-right: auto;
        margin-bottom: 20px;
    }

        .frame-wrapper.admin-view {
            width: clamp(70%, calc(100% - 250px), 95%);
            max-width: 1400px;
            margin-left: 250px;
        }

        .frame-wrapper.user-view {
            width: 90%;
            max-width: 1400px;
            margin-left: 0;
            margin-right: 0;
            padding: 30px; /* Increased padding for wider spacing */
        }

    .movie-grid {
        flex-grow: 1;
        overflow-y: auto;
        padding-bottom: 20px;
    }

    .row {
        margin: 0 -10px;
    }

    .col-md-6, .col-lg-6 {
        padding: 10px;
    }

    .title-gradient {
        font-size: 2rem;
        font-weight: 700;
        color: #FFDAB9;
        text-transform: uppercase;
        margin-bottom: 10px;
        background: linear-gradient(90deg, #FFDAB9 0%, #F5A89A 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    .date-selection {
        font-size: 0.9rem;
    }

    .form-select {
        background: #0F1213;
        border: 1px solid #FFDAB9;
        color: #FFDAB9;
        border-radius: 8px;
        padding: 5px 10px;
    }

        .form-select:focus {
            border-color: #F5A89A;
            box-shadow: 0 0 10px rgba(245, 168, 154, 0.5);
        }

    .movie-card {
        background: #0F1213;
        border-radius: 15px;
        border: 2px solid #FFDAB9;
        box-shadow: 0 4px 15px rgba(255, 218, 185, 0.2);
        transition: transform 0.3s ease;
        overflow: hidden;
        height: 250px; /* Increased height for a larger card */
        width: 100%;
        display: flex;
        flex-direction: row;
        align-items: stretch;
    }

        .movie-card:hover {
            transform: translateY(-5px);
        }

    .poster-container {
        width: 180px; /* Wider poster to match the image */
        height: 100%;
        overflow: hidden;
        border-radius: 15px 0 0 15px;
        position: relative;
        flex-shrink: 0;
    }

        .poster-container:hover::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            border-radius: 15px 0 0 15px;
            border: 2px solid #F5A89A;
            box-shadow: 0 0 10px rgba(245, 168, 154, 0.5);
        }

    .movie-poster {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s ease;
    }

        .movie-poster:hover {
            transform: scale(1.05);
        }

    .card-body {
        padding: 15px;
        flex-grow: 1;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        color: #FFDAB9;
    }

    .card-title {
        font-size: 1.2rem;
        font-weight: 700;
        margin-bottom: 8px;
        color: #FFDAB9;
    }

    .text-ellipsis {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .star-rating {
        font-size: 0.9rem;
        color: #FFDAB9;
    }

        .star-rating .fas {
            margin-right: 2px;
        }

        .star-rating .text-warning {
            color: #FFC107; /* Yellow stars */
        }

        .star-rating .text-secondary {
            color: #6c757d; /* Gray for empty stars */
        }

    .rating-text {
        font-size: 0.8rem;
        color: #FFDAB9;
        margin-left: 4px;
    }

    .btn-primary {
        background: #F5A89A;
        border: none;
        border-radius: 8px;
        padding: 6px 12px;
        font-size: 14px;
        color: #0F1213;
        font-weight: 600;
        transition: background 0.3s ease, transform 0.2s ease;
    }

        .btn-primary:hover {
            background: #FFDAB9;
            transform: translateY(-2px);
        }

    .btn-danger {
        background: #DC3545;
        border: none;
        border-radius: 8px;
        padding: 6px 12px;
        font-size: 14px;
        color: #FFFFFF;
        font-weight: 600;
        transition: background 0.3s ease, transform 0.2s ease;
    }

        .btn-danger:hover {
            background: #C82333;
            transform: translateY(-2px);
        }

    .action-btn {
        min-width: 80px;
        padding: 8px 12px;
        margin-right: 5px;
        text-align: center;
        display: inline-block;
        font-size: 14px;
        line-height: 1.5;
    }

    .table-container {
        max-height: calc(100vh - 300px);
        overflow-y: auto;
        overflow-x: hidden;
    }

    .table-custom {
        background: #0F1213;
        color: #FFDAB9;
        border-radius: 10px;
        overflow: hidden;
        width: 100%;
    }

        .table-custom th {
            background: #1C2526;
            color: #FFDAB9;
            font-weight: 600;
            padding: 12px;
            position: sticky;
            top: 0;
            z-index: 1;
        }

        .table-custom td {
            padding: 12px;
            border-bottom: 1px solid #FFDAB9;
            color: #FFDAB9;
        }

        .table-custom tr:hover {
            background: rgba(255, 218, 185, 0.1);
        }

    .table-container::-webkit-scrollbar {
        width: 8px;
    }

    .table-container::-webkit-scrollbar-track {
        background: #1C2526;
        border-radius: 10px;
    }

    .table-container::-webkit-scrollbar-thumb {
        background: #FFDAB9;
        border-radius: 10px;
    }

        .table-container::-webkit-scrollbar-thumb:hover {
            background: #F5A89A;
        }

    .pagination {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: 20px;
    }

    .pagination-controls {
        display: flex;
        gap: 5px;
    }

    .btn-pag {
        background: #0F1213;
        color: #FFDAB9;
        border: 1px solid #FFDAB9;
        padding: 5px 10px;
        border-radius: 5px;
        cursor: pointer;
        transition: background 0.3s ease;
    }

        .btn-pag:hover,
        .btn-pag.active {
            background: #FFDAB9;
            color: #0F1213;
        }

    .glow-effect {
        transition: box-shadow 0.3s ease;
    }

        .glow-effect:hover {
            box-shadow: 0 0 15px rgba(245, 168, 154, 0.5);
        }

    .alert {
        border-radius: 8px;
        padding: 10px;
        font-size: 14px;
    }

    .modal-content {
        background: #1C2526;
        color: #FFDAB9;
        border-radius: 15px;
    }

    .modal-header, .modal-body {
        border-color: #FFDAB9;
    }

    .form-control {
        background: #0F1213;
        border: 1px solid #FFDAB9;
        color: #FFDAB9;
        border-radius: 8px;
    }

        .form-control:focus {
            border-color: #F5A89A;
            box-shadow: 0 0 10px rgba(245, 168, 154, 0.5);
            background: #0F1213;
            color: #FFDAB9;
        }

    .order-count {
        font-size: 14px;
        color: #FFDAB9;
    }

    /* Responsive Adjustments */
    @@media (max-width: 768px) {
        .col-md-6, .col-lg-6

    {
        flex: 0 0 100%;
        max-width: 100%;
    }

    .movie-card {
        height: auto;
        flex-direction: column;
    }

    .poster-container {
        width: 100%;
        height: 250px;
        border-radius: 15px 15px 0 0;
    }

    .frame-wrapper.user-view {
        width: 95%;
    }

    }

    @@media (max-width: 576px) {
        .col-md-6, .col-lg-6

    {
        flex: 0 0 100%;
        max-width: 100%;
    }

    .poster-container {
        height: 200px;
    }

    .frame-wrapper.user-view {
        width: 98%;
    }

    }
</style>

<!-- JavaScript -->
@section Scripts {
    <script>
        $(document).ready(function () {
            // Date Selection
            $("#dateSelect").change(function () {
                let selectedDate = this.value;
                console.log("Selected date: " + selectedDate);
                // Add logic to fetch showtimes for the selected date if needed
            });

            // Show Alert
            function showAlert(message, type) {
                var alertHtml = `<div class="alert alert-${type} alert-dismissible fade show" role="alert">
                    ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>`;
                $('#alert-container').html(alertHtml);
            }

            // Add Movie
            $('#add-movie-form').submit(function (e) {
                e.preventDefault();
                $.ajax({
                    url: '@Url.Action("CreateMovie", "Admin")',
                    type: 'POST',
                    data: $(this).serialize(),
                    success: function (response) {
                        if (response.success) {
                            showAlert(response.message, 'success');
                            $('#addMovieModal').modal('hide');
                            location.reload();
                        } else {
                            showAlert(response.message + '<br>' + (response.errors ? response.errors.join('<br>') : ''), 'danger');
                        }
                    },
                    error: function () {
                        showAlert('Đã xảy ra lỗi khi thêm phim.', 'danger');
                    }
                });
            });

            // Edit Movie
            $(document).on('click', '.edit-movie-btn', function () {
                var movieId = $(this).data('id');
                var row = $(this).closest('tr');
                $('#editMovieId').val(movieId);

                // Fetch movie data from the server
                $.ajax({
                    url: '@Url.Action("GetMovieDetails", "Admin")/' + movieId,
                    type: 'GET',
                    success: function (data) {
                        $('#editTitle').val(data.title || '');
                        $('#editDescription').val(data.description || '');
                        $('#editDuration').val(data.duration || '');
                        $('#editPoster').val(data.poster || '');
                        $('#editGenre').val(data.genre || '');
                        $('#editDirector').val(data.director || '');
                        $('#editActors').val(data.actors || '');
                        $('#editTrailerUrl').val(data.trailerUrl || '');
                        $('#editMovieModal').modal('show');
                    },
                    error: function () {
                        showAlert('Không thể tải thông tin phim.', 'danger');
                    }
                });
            });

            $('#edit-movie-form').submit(function (e) {
                e.preventDefault();
                $.ajax({
                    url: '@Url.Action("EditMovie", "Admin")',
                    type: 'POST',
                    data: $(this).serialize(),
                    success: function (response) {
                        if (response.success) {
                            showAlert(response.message, 'success');
                            $('#editMovieModal').modal('hide');
                            location.reload();
                        } else {
                            showAlert(response.message + '<br>' + (response.errors ? response.errors.join('<br>') : ''), 'danger');
                        }
                    },
                    error: function () {
                        showAlert('Đã xảy ra lỗi khi cập nhật phim.', 'danger');
                    }
                });
            });

            // Delete Movie
            $(document).on('click', '.delete-movie-btn', function () {
                if (!confirm('Bạn có chắc chắn muốn xóa phim này?')) return;
                var movieId = $(this).data('id');
                $.ajax({
                    url: '@Url.Action("DeleteMovie", "Admin")',
                    type: 'POST',
                    data: { id: movieId, __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val() },
                    success: function (response) {
                        if (response.success) {
                            showAlert(response.message, 'success');
                            location.reload();
                        } else {
                            showAlert(response.message, 'danger');
                        }
                    },
                    error: function () {
                        showAlert('Đã xảy ra lỗi khi xóa phim.', 'danger');
                    }
                });
            });
        });
    </script>
}